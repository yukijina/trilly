// Logo

.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

// Search
.search {
    flex: 0  0 40%;

    // nested flex box - this makes search icon aligned center.
    display: flex;
    // main - horizontal line
    justify-content: center;
    // cross - vertical line
    align-items: center;

    &__input {
        font-family: inherit;
        font-size: inherit;
        background-color: var(--color-grey-light-2);
        border: none;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        //remove 3.25rem from input column and add icon here
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-grey-light-3);
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-grey-light-4);
        }
    }

    &__input:focus + &__button {
        background-color: var(--color-grey-light-3);
    }

    &__button {
        border: none;
        background-color: var(--color-grey-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }


    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-grey-dark-3);
    }
}


// User Navigation
.user-nav {
    //user-nav is alined centered by .header. This overwrite it and streatch. 
    //In this way, user-nav box streatch max vertically. When it hovers, this covers all the columns so it is good. 
    align-self: stretch;  

    display: flex;
    align-items: center;

    // select all -  .user-nav__icon-box and .user-nav__user
    & > * {
        padding: 0 2rem;
        cursor: pointer;
        // this covers from bottom to top in user-nav (it can cover entire sections when the icon is hovered)
        height: 100%;

        // align center the icons
        display: flex;
        align-items: center;
    }

    & > *:hover {
        background-color: var(--color-grey-light-2);
    }

    &__icon-box {
        position: relative;
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-grey-dark-2);
    }

    &__notification {
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        background-color: var(--color-primary);
        border-radius: 50%;
        color: #fff;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;

        // flex can center text too vertically and horizontally.
        display: flex;
        justify-content: center;
        align-items: center;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }

}

// Side navigation
.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;

    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    &__item:before {
        content: "";   // does not show in brower
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0);
        //we can set delays wait width .2s and transform 4s
        transition: transform .2s, 
                    width .4s cubic-bezier(1,0,0,1) .2s, background-color .1s;
    }

    &__item:hover::before,
    &__item--active::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        // color turns lighter when it clicled
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        color: var(--color-grey-light-1);
        text-decoration: none;
        text-transform: uppercase;
        display: block;
        padding: 1.5rem 3rem;
        //z-index only work when position is relative
        position: relative;
        z-index: 10;

        display: flex;
        align-items: center;

    }

    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        //color is current parent color
        fill: currentColor;
    }
}

// Legal text 

.legal {
    font-size: 1.2rem;
    color: var(--color-grey-light-4);
    text-align: center;
    padding: 2.5rem;
}

// Gallery
.gallery {
    display: flex;

    &__photo {
        width: 100%;
        display: block;
    }

}

// Hotel Overview
.overview {
    display: flex;
    align-items: center;  // it makes not exactly make star icons vertically center due to display inline (letter space). So we set &__starts 'display:flex'
    border-bottom: 1px solid var(--color-grey-light-2);


    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    &__stars {
        margin-right: auto;
        display: flex;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        font-size: 1.2rem;
        display: flex;
        align-items: center;
       
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        background-color: var(--color-primary);
        color: #fff;
        margin-left: 3rem;
        padding: 0 2.25rem;
        align-self: stretch;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;

    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}


/// Button inline
.btn-inline {
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: var(--line);
    padding-bottom: 2px;
    display: inline-block;
    background-color: tranparent;
    cursor: pointer;
    transition: all .2s;

      & span {
        margin-left: 3px;
        transition: margin-left .2s;
      }

    &:hover {
        color: var(--color-grey-dark-1);

        span {
          margin-left: 8px;
        }
    }

    &:focus {
        outline: none;
        // animation works during focused.
        animation: pulsate 1s infinite;
    }


}


@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba(0,0,0,.25);
    }

    100% {
        transform: scale(1);
    }
}

// Paragraph
.paragraph:not(:last-child) {
  margin-bottom: 2rem;
}


// List
.list {
  list-style: none;
  margin: 3rem 0;
  border-top: var(--line);
  border-bottom: var(--line);

  display: flex;
  // list paragraph wrap - but side by side by adding &__item flex-basis(width) 50%
  flex-wrap: wrap;

  &__item {
    flex: 0 0 50%;
    margin-bottom: .7rem;
  }

  &__item::before {
    content: "";
    display: inline-block;
    height: 1rem;
    width: 1rem;
    margin-right: .7rem;

    // Older Browser
    // background-image: url(../img/chevron-thin-right.svg);
    // background-size: cover;

    //Newer browsers - masks - change the background image, we can't change the color but it is possible using "mask"
    background-color: var(--color-primary);
    -webkit-mask-image: url(../img/chevron-thin-right.svg);
    -webkit-mask-size: cover;
    mask-image: url(../img/chevron-thin-right.svg);
    mask-size: cover;
  }
}


//Recommend
.recommend {
  font-size: 1.3rem;
  color: var(--color-grey-light-3);

  display: flex;
  align-items: center;

  &__count {
    //create space between boxes.
    margin-right: auto;
  }

  &__friends {

  }

  &__photo {
    //border is added to the image (image is not shurink)
    box-sizing: content-box;
    height: 4rem;
    width: 4rem;
    border-radius: 50%; 
    border: 3px solid #fff;

    &:not(:last-child) {
      margin-right: -1.5rem;
    }
  }
}

// Reviews
.review {
  background-color: #fff;
  box-shadow: var(--shadow-light);
  padding: 3rem;
  margin-bottom: 3.5rem;
  position: relative;
  overflow: hidden;

  &__text {
    margin-bottom: 2rem;
    z-index: 10;
    position: relative;
  }

  &__user {
    display: flex;
    align-items: center;
  }

  &__photo {
    height: 4rem;
    width: 4rem;
    border-radius: 50%;
    margin-right: 1.5rem;
  }

  &__user-box {
    margin-right: auto;
  }

  &__user-name {
    font-size: 1.1rem;
    font-weight: 600;
    text-transform: uppercase;
    margin-bottom: .4rem;
  }

  &__user-date {
    font-size: 1rem;
    color: var(--color-grey-dark-3);
  }

  &__rating {
    color: var(--color-primary);
    font-size: 2.2rem;
    font-weight: 300;
  }

  &::before {
    content: "\201C";
    position:absolute;
    top: -2.75rem;
    left: -1rem;
    font-size: 20rem;
    color: var(--color-grey-light-2);
    font-family: sans-serif;
    z-index: 1;
  }

}

//CALL TO ACTION
.cta {
  padding: 3.5rem 0;
  text-align: center;

  &__book-now {
    font-size: 2rem;
    font-weight: 300;
    text-transform: uppercase;
    margin-bottom: 2.5rem;
  }
}

// CALL TO ACTION
.btn {
  font-size: 1.5rem;
  font-weight: 300;
  text-transform: uppercase;
  border-radius: 100px;
  border: none;
  background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
  color: #fff;
  position: relative;
  //invisible btn text is overflow. So setting by overflow: hidden, we can hide the invisible button
  //the code bleow, text color is white so you can't see the btn before setting overflow but if you change tht color to red, you can see the btn.
  overflow: hidden;
  cursor: pointer;

  // btn's child (&__visible and &__invisible)
  & > * {
    display: inline-block;
    height: 100%;
    width: 100%;
    transition: all .2s;
  }

  &__visible {  
    padding: 2rem 7.5rem;
  }

  &__invisible {
    display: inline-block;
    //same padding as the above - but text overflow so set 0 to the vertical padding
    padding: 2rem 0;
    position: absolute;
    left: 0;
    // this makes button moves up exactly the same size of the button
    top: -100%;
  }

  &:hover {
    background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
  }

  &:hover &__visible {
    //this time, we don't use position absolute.
    //hight for btn is set 100%. So it transition 100% height.
    transform: translateY(100%);
  }

  &:hover &__invisible {
      top: 0;
  }
  
  &:focus {
    outline: none;
    animation: pulsate 1s infinite;
  }

}

